!!! 5
html
  head
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-status-bar-style", content="black")
    meta(name="viewport", content="width=device-width, height=device-height user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, target-densitydpi=device-dpi")
    title {Wall}
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(src='/javascripts/paper.js')
    script(src='//code.jquery.com/jquery-latest.min.js')
    script(src='/nowjs/now.js') //this is what allows realtime communication, 
body.background
  div#container
    //these clases will be replaced
    .canvas.landscape.aww-crosshair 
      h1 {Wall Name}
      nav#toolbar.toolbar
        ul.navigation
          li
            input.tool(type='button',value='Pen')
          li
            input.color(type='button',value='Black')
          li
            input.color(type='button',value='Red')
          li 
            input.color(type='button',value='Green')
          li  
            input.tool(type='button',value='Pan')
          li  
            input.tool(type='button',value='Select')
          li  
            a.quit(href='/walls/') quit
      .whiteboard
        canvas#myCanvas(resize)

  script(canvas='myCanvas', type="text/paperscript").
    now.ready(function(){
      
      //assuming only 1 layer
      //var myCanvas = document.getElementById('myCanvas');
      //paper.install(window);
      //paper.setup('myCanvas');
      var wallId = '4f46971939a9758452ffb089'; //from application
      var companyId = 1;
      var color = 'black';
      var width = 2;
     
      //NOW functions
      //populate the canvas
      now.initWall(companyId, wallId);
      
      //convert database info into paperjs object
      now.init = function(){
        //go through all elements and rebuild
        paper.view.draw();//refresh canvas
      };
      
      //Start of drawing
      now.startDraw = function(color,width,start,pathname,layer){
        if(!paper.project.layers[layer]){
          new Layer();
        }
        paper.project.layers[layer].activate();
        path = new Path();
        path.strokeColor = color;
        path.strokeWidth = width;
        path.add(start);
        path.name = pathname;
      }
      
      now.updateDraw = function(point,pathname,layer){
        paper.project.layers[layer].children[pathname].add(point);
        paper.view.draw(); //refresh canvas
      }

      now.endDraw = function(layer,pathname,newname){
        console.log('triggered');
        paper.project.layers[layer].children[pathname].simplify(10)
        paper.project.layers[layer].children[pathname].name = newname;
        paper.view.draw(); //refresh canvas
      }
      
      now.tError = function(err){
        alert(err);
      }
      //Tool Definitions

      //Pen Tool
      var pen = new Tool();
      pen.onMouseDown = function(event){
        pen.path = new Path();
        pen.path.strokeColor = color;
        pen.path.strokeWidth = 2;
        pen.path.add(event.point);
        now.shareStartDraw(companyId,wallId,color,width,event.point,paper.project.activeLayer.index);
      }
      pen.onMouseUp = function(mouseUpEvent){
        pen.path.simplify(10);
        now.newPath(companyId,wallId,pen.path.segments.toString(),color,pen.path.strokeWidth,paper.project.activeLayer.index,function(name){
          pen.path.name = name;
        });
      }
      pen.onMouseDrag = function(dragEvent){
        pen.path.add(dragEvent.point);
        now.shareUpdateDraw(companyId,wallId,dragEvent.point,paper.project.activeLayer.index);
      }

      //Pan Tool
      var pan = new Tool();
      pen.onMouseDown = function(event){}
      pen.onMouseDrag = function(event){}
      pen.onMouseUp = function(event){}

      //Select Tool
      var select = new Tool();
      pen.onMouseDown = function(event){}
      pen.onMouseDrag = function(event){}
      pen.onMouseUp = function(event){}

      //Event listeners

      //Change color;
      jQuery('.color').click(function(){
        color = $(this).val();
      });
      //Change tool
      jQuery('.tool').click(function(){
        var t = $(this).val();
        c = jQuery('#myCanvas').removeClass();
        console.log(t);
        switch(t){
          case 'Pan':
            c.addClass('move');
            pan.activate();
            break;
          case 'Pen':
            c.addClass('crosshair');
            pen.activate();
            break;
          case 'Select':
            c.addClass('pointer');
            select.activate();
            break; 
        }
      });
      jQuery('.tool[value=Pen]').click();
    });

    
